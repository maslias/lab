// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/maslias/chatroomer/pkg/common"
	"github.com/maslias/chatroomer/pkg/config"
	"github.com/maslias/chatroomer/pkg/forwarder"
	"github.com/maslias/chatroomer/pkg/health"
	"github.com/maslias/chatroomer/pkg/user"
	"github.com/maslias/chatroomer/pkg/web"
)

// Injectors from wire.go:

func InitializeWeb() (*web.HttpServer, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	httpLog := common.NewHttpLog()
	httpServer := web.NewHttpServer(configConfig, httpLog)
	return httpServer, nil
}

func InitializeUser() (*user.GrpcServer, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	httpLog := common.NewHttpLog()
	grpcServer := user.NewGrpcServer(configConfig, httpLog)
	return grpcServer, nil
}

func InitializeForwarder() (*forwarder.GrpcServer, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	httpLog := common.NewHttpLog()
	grpcServer := forwarder.NewGrpcServer(configConfig, httpLog)
	return grpcServer, nil
}

func InitliazeHealth() (*health.HttpServer, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	httpLog := common.NewHttpLog()
	httpServer := health.NewHttpServer(configConfig, httpLog)
	return httpServer, nil
}
